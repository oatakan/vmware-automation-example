---
- name: clone template and customize
  vmware_guest:
    hostname: "{{ lookup('env', 'VMWARE_HOST') }}"
    username: "{{ lookup('env', 'VMWARE_USER') }}"
    password: "{{ lookup('env', 'VMWARE_PASSWORD') }}"
    validate_certs: no
    datacenter: "{{ datacenter }}"
    cluster: "{{ cluster }}"
    folder: "{{ project_name |default(omit) }}"
    name: "dc-{{ project_name }}-{{ item.0 }}"
    template: "{{ item.1.template }}"
    state: poweredon
    wait_for_ip_address: yes
    disk: "{{ item.1.disk|default(omit) }}"
    hardware:
      memory_mb: "{{ item.1.memory }}"
      num_cpus: "{{ item.1.cpu }}"
      scsi: paravirtual
    networks:
    - name: "{{ network_name }}"
      ip: "{{ ip_address }}"
      netmask: "{{ netmask }}"
      gateway: "{{ gateway }}"
      domain: "{{ domain_name }}"
      dns_servers:
      - "{{ dns_server }}"
  async: 7200
  poll: 0
  register: deploy
  with_indexed_items: "{{ nodes }}"
  when: nodes is defined

- name: Wait for instance creation to complete
  async_status: jid="{{ item.ansible_job_id }}"
  register: instances
  until: instances.finished
  retries: 300
  delay: 10
  with_items: "{{ deploy.results }}"

- name: Waiting for servers to come online
  wait_for: host="{{ item.instance.hw_eth0.ipaddresses[0] }}" port="22" search_regex=OpenSSH
  with_items: "{{ instances.results }}"
  when: (instances | changed) and (item.instance is defined)